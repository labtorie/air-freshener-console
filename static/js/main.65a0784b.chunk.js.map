{"version":3,"sources":["components/screens/Settings/styles.module.css","components/Graph/styles.module.css","components/common/Header/style.module.css","components/common/Battery/styles.module.css","styles.module.css","components/screens/Main/styles.module.css","api/api.js","config/network.js","components/common/Battery/index.js","components/common/Header/index.js","utils/index.js","components/Graph/index.js","components/Graph/TriggerGraph.js","components/screens/Settings/index.js","components/screens/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API","axios","create","baseURL","withCredentials","getBatteryGraph","a","get","getTriggerGraph","getSettings","then","r","data","setSettings","prevSettings","put","Battery","percentage","useState","lastFetch","moment","state","setState","fetchBattery","dataArray","Object","entries","filter","map","value","time","timestamp","lastRecord","slice","icon","faBatteryEmpty","faBatteryQuarter","faBatteryHalf","faBatteryThreeQuarters","faBatteryFull","useEffect","className","styles","battery","onDoubleClick","Math","round","random","prev","color","style","now","unit","calcDiff","diff","getDiff","join","Header","bar","barTitle","spreadTriggersToDay","pairs","Array","fill","_","index","hour","forEach","getHour","getTotalPshicks","todayWakeUps","isSame","reduce","total","format","BatteryGraph","options","colors","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","tools","download","selection","zoomin","zoomout","pan","reset","customIcons","dataLabels","markers","size","title","text","align","yaxis","max","min","labels","formatter","val","xaxis","categories","tooltip","shared","series","name","graphContainer","width","TriggerGraph","plotOptions","radar","polygons","strokeColor","opacity","stroke","show","dashArray","legend","Settings","isVisible","onClose","activeTime","sleepTime","settings","_setSettings","fetchSettings","response","saveSettings","Number","cn","s","wrapper","section","inputArea","onChange","e","target","disabled","onClick","goBack","Card","gridArea","mainComponent","bottomText","onCLick","classNames","card","clickable","cardMainContent","cardBottomText","GraphCard","props","children","Main","batteryData","setBatteryData","triggerData","setTriggerData","today","week","month","totalPshicks","setTotalPshicks","displayModal","setDisplayModal","fetchTriggerData","daySpread","_todayPshicks","_weekPshicks","_monthPshicks","fetchBatteryData","totalGrid","totalRow","totalTitle","totalValue","mainGrid","faCog","p","App","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65a0784b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3un5n\",\"wrapper\":\"styles_wrapper__2GKub\",\"show\":\"styles_show__eYaCF\",\"section\":\"styles_section__k8e-n\",\"inputArea\":\"styles_inputArea__2nZMU\",\"goBack\":\"styles_goBack__3jVWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"styles_graphContainer__rvnP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"style_bar__3UGFG\",\"barTitle\":\"style_barTitle__2GbdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"battery\":\"styles_battery__b2nck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"styles_background__2Fc5s\",\"graphs\":\"styles_graphs__ANjRV\",\"body\":\"styles_body__32Flv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainGrid\":\"styles_mainGrid__1mR3b\",\"card\":\"styles_card__4jqsg\",\"cardMainContent\":\"styles_cardMainContent__16FlH\",\"cardBottomText\":\"styles_cardBottomText__2q2-n\",\"clickable\":\"styles_clickable__14Tnt\",\"totalGrid\":\"styles_totalGrid__dD4zH\",\"totalRow\":\"styles_totalRow__1kBP_\",\"totalTitle\":\"styles_totalTitle__1Du8w\",\"totalValue\":\"styles_totalValue__3XFFk\"};","import axios from \"axios\";\r\nimport {BASE_URL} from \"../config/network\";\r\n\r\nconst API = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: false\r\n})\r\n\r\nexport const getBatteryGraph = async () => {\r\n    return await API.get('test2/battery.json')\r\n}\r\n\r\nexport const getTriggerGraph = async () => {\r\n    return await API.get('test2/trigger.json')\r\n}\r\n\r\nexport const getSettings =  () => {\r\n    return API.get('settings.json').then(r=>r.data)\r\n}\r\n\r\nexport const setSettings = async (data) => {\r\n    const prevSettings = await getSettings()\r\n    return API.put('settings.json', {...prevSettings, ...data})\r\n}\r\n","export const BASE_URL = `https://air-freshener-iot-default-rtdb.europe-west1.firebasedatabase.app/`\r\n","import React, {useEffect, useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faBatteryEmpty, faBatteryFull,\r\n    faBatteryHalf,\r\n    faBatteryQuarter,\r\n    faBatteryThreeQuarters\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {getBatteryGraph} from \"../../../api/api\";\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\n\r\nconst Battery = () => {\r\n    const [state, setState] = useState({percentage: 100, lastFetch: moment()})\r\n    const getIcon = (percentage) => {\r\n        if (percentage < 10) return [faBatteryEmpty, '#eb3f33']\r\n        if (percentage < 25) return [faBatteryQuarter, '#ffce5c']\r\n        if (percentage < 50) return [faBatteryHalf, '#5fd393']\r\n        if (percentage < 75) return [faBatteryThreeQuarters, '#5fd393']\r\n\r\n        return [faBatteryFull, '#5fd393']\r\n    }\r\n\r\n    const getDiff = () => {\r\n        const now = moment()\r\n        let unit = 'seconds'\r\n\r\n        const calcDiff = (unit='s') => now.diff(moment(state.lastFetch), unit)\r\n\r\n        let diff = calcDiff('s')\r\n\r\n        if (diff >= 60) {\r\n            diff = calcDiff('m')\r\n            unit = 'minutes'\r\n            if (diff >= 60) {\r\n                diff = calcDiff('h')\r\n                unit = 'hours'\r\n                if (diff >= 24) {\r\n                    unit = 'days'\r\n                    diff = calcDiff('d')\r\n                }\r\n            }\r\n        }\r\n\r\n        return [diff, unit]\r\n    }\r\n    const fetchBattery = async () => {\r\n        const {data} = await getBatteryGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\r\n        const lastRecord = dataArray.slice(-1)[0]\r\n        setState({percentage: lastRecord?.value || 0, lastFetch: lastRecord?.time || moment()})\r\n    }\r\n\r\n    const shuffle = () => {\r\n        const value = Math.round(Math.random() * 100)\r\n        setState(prev => ({...prev, percentage: value}))\r\n    }\r\n\r\n\r\n    const icon = getIcon(state.percentage)\r\n    useEffect(()=>{fetchBattery()},[])\r\n    return <div className={styles.battery} onDoubleClick={shuffle}>\r\n        <FontAwesomeIcon icon={icon[0]} color={icon[1]}/>\r\n        <div>\r\n            {state.percentage+'%'}\r\n        </div>\r\n        <div style={{color: '#888'}}>\r\n            {getDiff().join(' ')+' ago'}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Battery\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\nimport Battery from \"../Battery\";\r\n\r\nconst Header = () => {\r\n    return <div className={styles.bar}>\r\n        <div className={styles.barTitle}>\r\n            AirPshicker\r\n        </div>\r\n        <Battery/>\r\n    </div>\r\n}\r\nexport default Header\r\n","import moment from \"moment\";\r\n\r\nexport const spreadTriggersToDay = (pairs=[]) => {\r\n    let data = new Array(24).fill(0).map((_,index)=>({hour: index, value: 0}))\r\n    pairs.forEach(({time, value})=>{\r\n        const hour = getHour(time)\r\n        data[hour] = {...data[hour], value: data[hour].value+value}\r\n    })\r\n    return data\r\n}\r\n\r\nexport const getTotalPshicks = (pairs, unit='day') => {\r\n    const todayWakeUps = pairs.filter(({time})=>{\r\n        return moment(time).isSame(moment(), unit)\r\n    })\r\n    return todayWakeUps.reduce((total, {value})=>total+value,0)\r\n}\r\n\r\nconst getHour = (timestamp) => {\r\n    return +moment(timestamp).format('H')\r\n}\r\n","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\n\r\nconst BatteryGraph = ({data=[]}) => {\r\n\r\n    const options = {\r\n            colors: ['#00ff00'],\r\n            chart: {\r\n                type: 'area',\r\n                stacked: false,\r\n                height: 350,\r\n                zoom: {\r\n                    type: 'x',\r\n                    enabled: true,\r\n                    autoScaleYaxis: true\r\n                },\r\n                toolbar: {\r\n                    autoSelected: 'zoom',\r\n                    tools: {\r\n                        download: false,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: false,\r\n                        zoomout: false,\r\n                        pan: true,\r\n                        reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n                        customIcons: []\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            markers: {\r\n                size: 0,\r\n            },\r\n            title: {\r\n                text: 'Battery Percentage',\r\n                align: 'left'\r\n            },\r\n            fill: {\r\n                colors: ['#00ff00'],\r\n            },\r\n            yaxis: {\r\n                max: 100,\r\n                type: 'numeric',\r\n                min: 0,\r\n                title: {\r\n                    text: 'Battery'\r\n                },\r\n                labels: {\r\n                    formatter: (val) => val+'%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'numeric',\r\n                categories: data.map(({time})=>time),\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return moment(val).format('DD/MM HH:mm');\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                shared: false,\r\n            }\r\n        }\r\n\r\n    const series = [{\r\n        name: 'Battery',\r\n        data: data.map(({value, time}, index)=>value)\r\n    }]\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ReactApexChart options={options} series={series} type=\"area\" height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default BatteryGraph\r\n","import React from 'react'\r\nimport styles from './styles.module.css'\r\nimport ApexChart from 'react-apexcharts'\r\n\r\nconst TriggerGraph = ({data = []}) => {\r\n\r\n    const series = [{data: data.map(({value}) => value), name: 'Activations'}]\r\n\r\n    const options = {\r\n        chart: {\r\n            width: 380,\r\n            type: 'radar',\r\n\r\n        },\r\n        title: {\r\n            text: 'Daily usage',\r\n            align: 'left'\r\n        },\r\n        plotOptions: {\r\n            radar: {\r\n                polygons: {\r\n                    strokeColor: 'transparent',\r\n                    fill: {colors: ['#fff']}\r\n                },\r\n\r\n            }\r\n        },\r\n        labels: data.map(({hour}) => hour),\r\n        fill: {\r\n            opacity: .4\r\n        },\r\n        stroke: {\r\n            show: false,\r\n            width: 2,\r\n            colors: [],\r\n            dashArray: 0\r\n        },\r\n        markers: {\r\n            size: 3\r\n        },\r\n        yaxis: {\r\n            show: false,\r\n            labels: {\r\n                formatter: val => val+' times',\r\n\r\n            }\r\n        },\r\n        xaxis: {\r\n            show: true,\r\n            categories: data.map(({hour}) => hour+':00'),\r\n            labels: {\r\n                show: true,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false\r\n        },\r\n\r\n    }\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ApexChart type={'radar'} options={options} series={series} height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default TriggerGraph\r\n","import React, {useEffect, useState} from 'react'\r\nimport s from './styles.module.css'\r\nimport cn from \"classnames\";\r\nimport Header from \"../../common/Header\";\r\nimport {getSettings, setSettings} from \"../../../api/api\";\r\n\r\nconst Settings = ({isVisible, onClose=()=>{}}) => {\r\n\r\n    const [settings, _setSettings] = useState({activeTime: 0, sleepTime: 0})\r\n\r\n    const fetchSettings = async () => {\r\n        const response = await getSettings()\r\n        _setSettings(prev=>({...prev, ...response}))\r\n    }\r\n\r\n    const saveSettings = async () => {\r\n        await setSettings({\r\n            activeTime: Number(settings.activeTime),\r\n            sleepTime: Number(settings.sleepTime)\r\n        })\r\n        onClose()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchSettings()\r\n    },[isVisible])\r\n\r\n\r\n    return <div className={cn(s.wrapper, isVisible && s.show)}>\r\n            <h1>Settings</h1>\r\n        <div className={s.section}><span>Waiting time before sleep</span>\r\n            <div className={s.inputArea}>\r\n                <input value={settings.activeTime}\r\n                       onChange={e=>_setSettings(prev=>({...prev, activeTime: e.target.value}))}\r\n                       type={'number'}/>seconds</div>\r\n        </div>\r\n        <div className={s.section}><span>Sleep time</span>\r\n            <div className={s.inputArea}>\r\n                <input value={settings.sleepTime}\r\n                       onChange={e=>_setSettings(prev=>({...prev, sleepTime: e.target.value}))}\r\n                       type={'number'}/>seconds</div>\r\n        </div>\r\n        <div className={s.section}><span>Spray interval</span>\r\n            <div className={s.inputArea}><input type={'number'} disabled/>minutes</div>\r\n        </div>\r\n        <button onClick={saveSettings}>Apply changes</button>\r\n        <div onClick={onClose} className={s.goBack}>{'< Back to home screen'}</div>\r\n        </div>\r\n\r\n}\r\n\r\n\r\nexport default Settings\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './styles.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {getBatteryGraph, getTriggerGraph} from \"../../../api/api\";\r\nimport {getTotalPshicks, spreadTriggersToDay} from \"../../../utils\";\r\nimport BatteryGraph from \"../../Graph\";\r\nimport TriggerGraph from \"../../Graph/TriggerGraph\";\r\nimport classNames from \"classnames\";\r\nimport Settings from \"../Settings\";\r\n\r\n\r\nconst Main = () => {\r\n    const [batteryData, setBatteryData] = useState([])\r\n    const [triggerData, setTriggerData] = useState([])\r\n    const [totalPshicks, setTotalPshicks] = useState({today: 0, week: 0, month: 0})\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n\r\n\r\n    const fetchTriggerData = async () => {\r\n        const {data} = await getTriggerGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp}))\r\n        const daySpread = spreadTriggersToDay(dataArray)\r\n        const _todayPshicks = getTotalPshicks(dataArray, 'day')\r\n        const _weekPshicks = getTotalPshicks(dataArray, 'week')\r\n        const _monthPshicks = getTotalPshicks(dataArray, 'month')\r\n\r\n        setTotalPshicks({today: _todayPshicks, week: _weekPshicks, month: _monthPshicks})\r\n        setTriggerData(daySpread)\r\n    }\r\n\r\n    const fetchBatteryData = async () => {\r\n        const {data} = await getBatteryGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\r\n        setBatteryData(dataArray)\r\n    }\r\n    useEffect(()=>{\r\n        fetchBatteryData()\r\n        fetchTriggerData()\r\n    }, [])\r\n\r\n    const totalGrid = <div className={styles.totalGrid}>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Today</div>\r\n            <div className={styles.totalValue}>{totalPshicks.today}</div>\r\n        </div>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Week</div>\r\n            <div className={styles.totalValue}>{totalPshicks.week}</div>\r\n        </div>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Month</div>\r\n            <div className={styles.totalValue}>{totalPshicks.month}</div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    return <>\r\n        <Settings isVisible={displayModal} onClose={()=>setDisplayModal(false)}/>\r\n        <div className={styles.mainGrid}>\r\n        <Card mainComponent={'7.3V'} bottomText={'Enough to work (Mock)'} gridArea={'volt'}/>\r\n        <Card gridArea={'today'} mainComponent={totalGrid} bottomText={'Activations'}/>\r\n        <Card gridArea={'sets'} mainComponent={<FontAwesomeIcon icon={faCog}/>} bottomText={'Settings'} onCLick={()=>setDisplayModal(p=>!p)}/>\r\n        <GraphCard gridArea={'graph1'}>\r\n            <BatteryGraph data={batteryData}/>\r\n        </GraphCard>\r\n        <GraphCard gridArea={'graph2'}>\r\n            <TriggerGraph data={triggerData}/>\r\n        </GraphCard>\r\n    </div>\r\n        </>\r\n}\r\n\r\nconst Card = ({gridArea='', mainComponent='', bottomText='', onCLick}) => {\r\n\r\n    return <div className={classNames(styles.card, onCLick && styles.clickable)} onClick={()=>{onCLick && onCLick()}} style={{gridArea}}>\r\n        <div className={styles.cardMainContent}>{mainComponent}</div>\r\n        <div className={styles.cardBottomText}>{bottomText}</div>\r\n    </div>\r\n}\r\n\r\nconst GraphCard = ({gridArea='', ...props}) => {\r\n    return <div className={styles.card} style={{gridArea}}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\r\nimport Header from \"./components/common/Header\";\r\nimport React from \"react\";\r\nimport styles from './styles.module.css'\r\nimport Main from \"./components/screens/Main\";\r\n\r\nfunction App() {\r\n  return <div className={styles.body}>\r\n    <Header/>\r\n    <Main/>\r\n  </div>\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}