{"version":3,"sources":["components/screens/Settings/styles.module.css","components/Graph/styles.module.css","styles.module.css","components/common/Header/style.module.css","components/common/Battery/styles.module.css","components/screens/Main/styles.module.css","config/battery.js","api/api.js","config/network.js","utils/index.js","contexts/dataContext.js","components/common/Battery/index.js","components/common/Header/index.js","components/Graph/index.js","components/Graph/TriggerGraph.js","components/screens/Settings/index.js","components/screens/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","voltage","levels","API","axios","create","baseURL","withCredentials","getBatteryGraph","a","get","getTriggerGraph","getSettings","then","r","data","setSettings","prevSettings","put","spreadTriggersToDay","pairs","Array","fill","map","_","index","hour","value","forEach","time","getHour","getTotalPshicks","unit","todayWakeUps","filter","moment","isSame","reduce","total","timestamp","format","contextShape","plots","activations","currentState","lastPush","recentActivity","day","week","month","settings","activeTime","sleepTime","sprayInterval","startService","fetchData","fetchSettings","saveSettings","isFetching","DataContext","React","createContext","Battery","useContext","icon","faBatteryEmpty","faBatteryQuarter","faBatteryHalf","faBatteryThreeQuarters","faBatteryFull","className","styles","battery","color","style","now","calcDiff","diff","getDiff","join","Header","bar","barTitle","BatteryGraph","options","colors","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","tools","download","selection","zoomin","zoomout","pan","reset","customIcons","dataLabels","markers","size","title","text","align","yaxis","max","min","labels","formatter","val","toFixed","xaxis","categories","tooltip","shared","series","name","graphContainer","width","TriggerGraph","plotOptions","radar","polygons","strokeColor","opacity","stroke","show","dashArray","legend","Settings","isVisible","onClose","useState","_settings","_setSettings","onSave","useEffect","cn","s","wrapper","section","inputArea","onChange","e","prev","target","disabled","onClick","goBack","Card","gridArea","mainComponent","bottomText","onCLick","classNames","card","clickable","cardMainContent","cardBottomText","GraphCard","props","children","Main","displayModal","setDisplayModal","totalGrid","totalRow","totalTitle","totalValue","mainGrid","faCog","p","App","appData","setData","console","log","voltageData","activityData","voltageArray","Object","entries","slice","currentVoltage","activityArray","dailyActivitySpread","activityDay","activityWeek","activityMonth","state","Number","setInterval","useDataContext","Provider","loadingOverlay","contentWrapper","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.465717a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3un5n\",\"wrapper\":\"styles_wrapper__2GKub\",\"show\":\"styles_show__eYaCF\",\"section\":\"styles_section__k8e-n\",\"inputArea\":\"styles_inputArea__2nZMU\",\"goBack\":\"styles_goBack__3jVWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"styles_graphContainer__rvnP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingOverlay\":\"styles_loadingOverlay__25Hxt\",\"body\":\"styles_body__32Flv\",\"contentWrapper\":\"styles_contentWrapper__fzvAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"style_bar__3UGFG\",\"barTitle\":\"style_barTitle__2GbdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"battery\":\"styles_battery__b2nck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainGrid\":\"styles_mainGrid__1mR3b\",\"card\":\"styles_card__4jqsg\",\"cardMainContent\":\"styles_cardMainContent__16FlH\",\"cardBottomText\":\"styles_cardBottomText__2q2-n\",\"clickable\":\"styles_clickable__14Tnt\",\"totalGrid\":\"styles_totalGrid__dD4zH\",\"totalRow\":\"styles_totalRow__1kBP_\",\"totalTitle\":\"styles_totalTitle__1Du8w\",\"totalValue\":\"styles_totalValue__3XFFk\"};","export const voltage = {\r\n    min: 6.5,\r\n    max: 9.6\r\n}\r\n\r\nexport const levels = [6.5, 7.0, 8.5, 9.5] // too-low, low, normal, good\r\n\r\n\r\n\r\n","import axios from \"axios\";\r\nimport {BASE_URL} from \"../config/network\";\r\n\r\nconst API = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: false\r\n})\r\n\r\nexport const getBatteryGraph = async () => {\r\n    return await API.get('data/battery.json')\r\n}\r\n\r\nexport const getTriggerGraph = async () => {\r\n    return await API.get('data/trigger.json')\r\n}\r\n\r\nexport const getSettings =  () => {\r\n    return API.get('settings.json').then(r=>r.data)\r\n}\r\n\r\nexport const setSettings = async (data) => {\r\n    const prevSettings = await getSettings()\r\n    return API.put('settings.json', {...prevSettings, ...data})\r\n}\r\n","export const BASE_URL = `https://air-freshener-iot-default-rtdb.europe-west1.firebasedatabase.app/`\r\n\r\nexport const FETCH_INTERVAL = 5000\r\n","import moment from \"moment\";\r\n\r\nexport const spreadTriggersToDay = (pairs=[]) => {\r\n    let data = new Array(24).fill(0).map((_,index)=>({hour: index, value: 0}))\r\n    pairs.forEach(({time, value})=>{\r\n        const hour = getHour(time)\r\n        data[hour] = {...data[hour], value: data[hour].value+value}\r\n    })\r\n    return data\r\n}\r\n\r\nexport const getTotalPshicks = (pairs, unit='day') => {\r\n    const todayWakeUps = pairs.filter(({time})=>{\r\n        return moment(time).isSame(moment(), unit)\r\n    })\r\n    return todayWakeUps.reduce((total, {value})=>total+value,0)\r\n}\r\n\r\nconst getHour = (timestamp) => {\r\n    return +moment(timestamp).format('H')\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport moment from \"moment\";\r\nimport {getBatteryGraph, getSettings, getTriggerGraph, setSettings} from \"../api/api\";\r\nimport {getTotalPshicks, spreadTriggersToDay} from \"../utils\";\r\nimport {FETCH_INTERVAL} from \"../config/network\";\r\n\r\nconst contextShape = {\r\n    data: {\r\n        plots: {\r\n            voltage: {\r\n                data: []\r\n            },\r\n            activations: {\r\n                data: []\r\n            },\r\n        },\r\n        currentState: {\r\n            voltage: {\r\n                value: 0,\r\n                lastPush: moment()\r\n            },\r\n            recentActivity: {\r\n                day: 0,\r\n                week: 0,\r\n                month: 0,\r\n            }\r\n        },\r\n        settings: {\r\n            activeTime: 0,\r\n            sleepTime: 0,\r\n            sprayInterval: 0,\r\n        },\r\n    },\r\n    startService: ()=>{},\r\n    fetchData: async ()=>{},\r\n    fetchSettings: async ()=>{},\r\n    saveSettings: async ()=>{},\r\n    isFetching: true,\r\n}\r\nconst DataContext = React.createContext(contextShape)\r\n\r\nexport const useDataContext = () => {\r\n    const [data, setData] = useState(contextShape)\r\n    useEffect(()=>{\r\n        console.log(data)\r\n    }, [data])\r\n\r\n    const fetchData = async () => {\r\n        const {data: voltageData} = await getBatteryGraph()\r\n        const {data: activityData} = await getTriggerGraph()\r\n\r\n        const voltageArray = Object\r\n            .entries(voltageData || {})\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({\r\n                ...value,\r\n                value: (value.value / 1000).toFixed(1),\r\n                time: value?.timestamp\r\n            }))\r\n        const {value: currentVoltage, time: lastPush}= voltageArray.slice(-1)[0]\r\n\r\n        const activityArray = Object\r\n            .entries(activityData|| {})\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({\r\n                ...value,\r\n                time: value?.timestamp\r\n            }))\r\n        const dailyActivitySpread = spreadTriggersToDay(activityArray)\r\n        const activityDay = getTotalPshicks(activityArray, 'day')\r\n        const activityWeek = getTotalPshicks(activityArray, 'week')\r\n        const activityMonth = getTotalPshicks(activityArray, 'month')\r\n\r\n        setData(state=>({\r\n            ...state,\r\n            isFetching: false,\r\n            data: {\r\n                ...state.data,\r\n                plots: {\r\n                    voltage: {\r\n                        data: voltageArray\r\n                    },\r\n                    activations: {\r\n                        data: dailyActivitySpread\r\n                    },\r\n                },\r\n                currentState: {\r\n                    voltage: {\r\n                        value: currentVoltage,\r\n                        lastPush: lastPush\r\n                    },\r\n                    recentActivity: {\r\n                        day: activityDay,\r\n                        week: activityWeek,\r\n                        month: activityMonth,\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    const fetchSettings = async () => {\r\n        const {activeTime, sleepTime} = await getSettings()\r\n        setData(state => ({\r\n            ...state,\r\n            data: {\r\n                ...state.data,\r\n                settings: {\r\n                    activeTime,\r\n                    sleepTime,\r\n                    sprayInterval: 0,\r\n                }\r\n            }\r\n        }))\r\n    }\r\n\r\n    const saveSettings = async ({activeTime=0, sleepTime=0}) => {\r\n        await setSettings({\r\n            activeTime: Number(activeTime),\r\n            sleepTime: Number(sleepTime)\r\n        })\r\n    }\r\n\r\n    const startService = () => {\r\n        setInterval(()=>{\r\n            fetchData()\r\n        }, FETCH_INTERVAL)\r\n    }\r\n\r\n    return {...data, startService, fetchData, fetchSettings, saveSettings}\r\n}\r\n\r\nexport default DataContext\r\n","import React, {useContext} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faBatteryEmpty, faBatteryFull,\r\n    faBatteryHalf,\r\n    faBatteryQuarter,\r\n    faBatteryThreeQuarters\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\nimport {levels} from \"../../../config/battery\";\r\nimport DataContext from \"../../../contexts/dataContext\";\r\n\r\nconst Battery = () => {\r\n\r\n    const {data: {currentState: {voltage: {value, lastPush}}}} = useContext(DataContext)\r\n    const getIcon = (voltage) => {\r\n        if (voltage < levels[0]) return [faBatteryEmpty, '#eb3f33']\r\n        if (voltage < levels[1]) return [faBatteryQuarter, '#ffce5c']\r\n        if (voltage < levels[2]) return [faBatteryHalf, '#5fd393']\r\n        if (voltage < levels[3]) return [faBatteryThreeQuarters, '#5fd393']\r\n\r\n        return [faBatteryFull, '#5fd393']\r\n    }\r\n\r\n    const getDiff = () => {\r\n        const now = moment()\r\n        let unit = 'seconds'\r\n\r\n        const calcDiff = (unit='s') => now.diff(moment(lastPush), unit)\r\n\r\n        let diff = calcDiff('s')\r\n\r\n        if (diff >= 60) {\r\n            diff = calcDiff('m')\r\n            unit = 'minutes'\r\n            if (diff >= 60) {\r\n                diff = calcDiff('h')\r\n                unit = 'hours'\r\n                if (diff >= 24) {\r\n                    unit = 'days'\r\n                    diff = calcDiff('d')\r\n                }\r\n            }\r\n        }\r\n\r\n        return [diff, unit]\r\n    }\r\n\r\n\r\n    const icon = getIcon(value)\r\n\r\n    return <div className={styles.battery}>\r\n        <FontAwesomeIcon icon={icon[0]} color={icon[1]}/>\r\n        <div>\r\n            {value+'V'}\r\n        </div>\r\n        <div style={{color: '#888'}}>\r\n            {getDiff().join(' ')+' ago'}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Battery\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\nimport Battery from \"../Battery\";\r\n\r\nconst Header = () => {\r\n    return <div className={styles.bar}>\r\n        <div className={styles.barTitle}>\r\n            AirPshicker\r\n        </div>\r\n        <Battery/>\r\n    </div>\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\nimport {voltage} from \"../../config/battery\";\r\n\r\nconst BatteryGraph = ({data=[]}) => {\r\n\r\n    const options = {\r\n            colors: ['#5fd393'],\r\n            chart: {\r\n                type: 'area',\r\n                stacked: false,\r\n                height: 350,\r\n                zoom: {\r\n                    type: 'x',\r\n                    enabled: true,\r\n                    autoScaleYaxis: true\r\n                },\r\n                toolbar: {\r\n                    autoSelected: 'zoom',\r\n                    tools: {\r\n                        download: false,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: false,\r\n                        zoomout: false,\r\n                        pan: true,\r\n                        reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n                        customIcons: []\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            markers: {\r\n                size: 0,\r\n            },\r\n            title: {\r\n                text: 'Battery Voltage',\r\n                align: 'left'\r\n            },\r\n            fill: {\r\n                colors: ['#5fd393'],\r\n            },\r\n            yaxis: {\r\n                max: voltage.max,\r\n                min: voltage.min,\r\n                type: 'numeric',\r\n                title: {\r\n                    text: 'Volts'\r\n                },\r\n                labels: {\r\n                    formatter: (val) => val.toFixed(1)\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'numeric',\r\n                categories: data.map(({time})=>time),\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return moment(val).format('DD/MM HH:mm');\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                shared: false,\r\n            }\r\n        }\r\n\r\n    const series = [{\r\n        name: 'Battery',\r\n        data: data.map(({value, time}, index)=>value)\r\n    }]\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ReactApexChart options={options} series={series} type=\"area\" height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default BatteryGraph\r\n","import React from 'react'\r\nimport styles from './styles.module.css'\r\nimport ApexChart from 'react-apexcharts'\r\n\r\nconst TriggerGraph = ({data = []}) => {\r\n\r\n    const series = [{data: data.map(({value}) => value), name: 'Activations'}]\r\n\r\n    const options = {\r\n        chart: {\r\n            width: 380,\r\n            type: 'radar',\r\n\r\n        },\r\n        title: {\r\n            text: 'Daily usage',\r\n            align: 'left'\r\n        },\r\n        plotOptions: {\r\n            radar: {\r\n                polygons: {\r\n                    strokeColor: 'transparent',\r\n                    fill: {colors: ['#fff']}\r\n                },\r\n\r\n            }\r\n        },\r\n        labels: data.map(({hour}) => hour),\r\n        fill: {\r\n            opacity: .4\r\n        },\r\n        stroke: {\r\n            show: false,\r\n            width: 2,\r\n            colors: [],\r\n            dashArray: 0\r\n        },\r\n        markers: {\r\n            size: 3\r\n        },\r\n        yaxis: {\r\n            show: false,\r\n            labels: {\r\n                formatter: val => val+' times',\r\n\r\n            }\r\n        },\r\n        xaxis: {\r\n            show: true,\r\n            categories: data.map(({hour}) => hour+':00'),\r\n            labels: {\r\n                show: true,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false\r\n        },\r\n\r\n    }\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ApexChart type={'radar'} options={options} series={series} height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default TriggerGraph\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport s from './styles.module.css'\r\nimport cn from \"classnames\";\r\nimport {getSettings, setSettings} from \"../../../api/api\";\r\nimport DataContext from \"../../../contexts/dataContext\";\r\n\r\nconst Settings = ({isVisible, onClose=()=>{}}) => {\r\n\r\n    const {data: {settings}, fetchSettings, saveSettings} = useContext(DataContext)\r\n    const [_settings, _setSettings] = useState(settings)\r\n\r\n\r\n    const onSave = async () => {\r\n        await saveSettings(_settings)\r\n        onClose()\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchSettings()\r\n        _setSettings(settings)\r\n    },[isVisible])\r\n\r\n\r\n    return <div className={cn(s.wrapper, isVisible && s.show)}>\r\n            <h1>Settings</h1>\r\n        <div className={s.section}><span>Waiting time before sleep</span>\r\n            <div className={s.inputArea}>\r\n                <input value={_settings.activeTime}\r\n                       onChange={e=>_setSettings(prev=>({...prev, activeTime: e.target.value}))}\r\n                       type={'number'}/>seconds</div>\r\n        </div>\r\n        <div className={s.section}><span>Sleep time</span>\r\n            <div className={s.inputArea}>\r\n                <input value={_settings.sleepTime}\r\n                       onChange={e=>_setSettings(prev=>({...prev, sleepTime: e.target.value}))}\r\n                       type={'number'}/>seconds</div>\r\n        </div>\r\n        <div className={s.section}><span>Spray interval</span>\r\n            <div className={s.inputArea}><input type={'number'} disabled/>minutes</div>\r\n        </div>\r\n        <button onClick={onSave}>Apply changes</button>\r\n        <div onClick={onClose} className={s.goBack}>{'< Back to home screen'}</div>\r\n        </div>\r\n\r\n}\r\n\r\n\r\nexport default Settings\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport styles from './styles.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\r\nimport BatteryGraph from \"../../Graph\";\r\nimport TriggerGraph from \"../../Graph/TriggerGraph\";\r\nimport classNames from \"classnames\";\r\nimport Settings from \"../Settings\";\r\nimport {levels} from \"../../../config/battery\";\r\nimport DataContext from \"../../../contexts/dataContext\";\r\n\r\n\r\nconst Main = () => {\r\n    const [displayModal, setDisplayModal] = useState(false);\r\n\r\n    const {data, startService} = useContext(DataContext)\r\n\r\n    useEffect(()=>{\r\n        startService()\r\n    },[])\r\n\r\n\r\n    const getBatteryStatus = (voltage) => {\r\n        if (voltage < levels[0]) return 'Too low. Needs charging'\r\n        if (voltage < levels[1]) return 'Running low'\r\n        if (voltage < levels[2]) return 'Enough to work'\r\n        if (voltage < levels[3]) return 'Good'\r\n\r\n        return 'Fully charged'\r\n    }\r\n\r\n\r\n    const totalGrid = <div className={styles.totalGrid}>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Today</div>\r\n            <div className={styles.totalValue}>{data.currentState?.recentActivity?.day}</div>\r\n        </div>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Week</div>\r\n            <div className={styles.totalValue}>{data.currentState?.recentActivity?.week}</div>\r\n        </div>\r\n        <div className={styles.totalRow}>\r\n            <div className={styles.totalTitle}>Month</div>\r\n            <div className={styles.totalValue}>{data.currentState?.recentActivity?.month}</div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    return <>\r\n        <Settings isVisible={displayModal} onClose={()=>setDisplayModal(false)}/>\r\n        <div className={styles.mainGrid}>\r\n            <Card mainComponent={\r\n                <div className={styles.totalRow}>\r\n                    <div className={styles.totalTitle}>Volts</div>\r\n                    <div className={styles.totalValue}>{data.currentState?.voltage?.value || '0.0'}</div>\r\n                </div>\r\n            } bottomText={getBatteryStatus(data.currentState?.voltage?.value)} gridArea={'volt'}/>\r\n            <Card gridArea={'today'} mainComponent={totalGrid} bottomText={'Activations'}/>\r\n            <Card gridArea={'sets'} mainComponent={<FontAwesomeIcon icon={faCog}/>} bottomText={'Settings'} onCLick={()=>setDisplayModal(p=>!p)}/>\r\n            <GraphCard gridArea={'graph1'}>\r\n                <BatteryGraph data={data.plots?.voltage?.data}/>\r\n            </GraphCard>\r\n            <GraphCard gridArea={'graph2'}>\r\n                <TriggerGraph data={data.plots?.activations?.data}/>\r\n            </GraphCard>\r\n        </div>\r\n    </>\r\n}\r\n\r\nconst Card = ({gridArea='', mainComponent='', bottomText='', onCLick}) => {\r\n\r\n    return <div className={classNames(styles.card, onCLick && styles.clickable)} onClick={()=>{onCLick && onCLick()}} style={{gridArea}}>\r\n        <div className={styles.cardMainContent}>{mainComponent}</div>\r\n        <div className={styles.cardBottomText}>{bottomText}</div>\r\n    </div>\r\n}\r\n\r\nconst GraphCard = ({gridArea='', ...props}) => {\r\n    return <div className={styles.card} style={{gridArea}}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\r\nimport Header from \"./components/common/Header\";\r\nimport React, {useEffect} from \"react\";\r\nimport styles from './styles.module.css'\r\nimport Main from \"./components/screens/Main\";\r\nimport DataContext, {useDataContext} from \"./contexts/dataContext\";\r\n\r\nfunction App() {\r\n\r\n  const appData = useDataContext()\r\n\r\n  useEffect(()=>{\r\n    appData.fetchData()\r\n  }, [])\r\n\r\n\r\n  return <DataContext.Provider value={appData}>\r\n    <div className={styles.loadingOverlay} style={{opacity: Number(appData.isFetching)}}/>\r\n    <div className={styles.contentWrapper}>\r\n    <div className={styles.body}>\r\n      <Header/>\r\n      <Main/>\r\n    </div>\r\n    </div>\r\n    </DataContext.Provider>\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}