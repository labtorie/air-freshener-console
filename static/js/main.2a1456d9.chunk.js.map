{"version":3,"sources":["components/screens/Main/styles.module.css","components/Graph/styles.module.css","components/common/Header/style.module.css","components/common/Battery/styles.module.css","styles.module.css","api/api.js","config/network.js","components/common/Battery/index.js","components/common/Header/index.js","components/Graph/index.js","assets/bkg.jpg","components/Graph/TriggerGraph.js","utils/index.js","components/screens/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API","axios","create","baseURL","withCredentials","getBatteryGraph","get","getTriggerGraph","Battery","percentage","useState","lastFetch","moment","state","setState","fetchBattery","a","data","dataArray","Object","entries","filter","map","value","time","timestamp","lastRecord","slice","icon","faBatteryEmpty","faBatteryQuarter","faBatteryHalf","faBatteryThreeQuarters","faBatteryFull","useEffect","className","styles","battery","onDoubleClick","Math","round","random","prev","color","style","now","unit","calcDiff","diff","getDiff","join","Header","bar","barTitle","BatteryGraph","options","colors","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","tools","download","selection","zoomin","zoomout","pan","reset","customIcons","dataLabels","markers","size","title","text","align","fill","yaxis","max","min","labels","formatter","val","xaxis","categories","format","tooltip","shared","series","name","index","graphContainer","width","TriggerGraph","plotOptions","radar","polygons","strokeColor","hour","opacity","stroke","show","dashArray","fontSize","fontFamily","legend","spreadTriggersToDay","pairs","Array","_","forEach","getHour","Card","gridArea","mainComponent","bottomText","onCLick","classNames","card","clickable","onClick","cardMainContent","cardBottomText","GraphCard","props","children","Main","batteryData","setBatteryData","triggerData","setTriggerData","fetchTriggerData","daySpread","fetchBatteryData","mainGrid","faCog","App","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a1456d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainGrid\":\"styles_mainGrid__1mR3b\",\"card\":\"styles_card__4jqsg\",\"cardMainContent\":\"styles_cardMainContent__16FlH\",\"cardBottomText\":\"styles_cardBottomText__2q2-n\",\"clickable\":\"styles_clickable__14Tnt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"styles_graphContainer__rvnP9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"style_bar__3UGFG\",\"barTitle\":\"style_barTitle__2GbdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"battery\":\"styles_battery__b2nck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"styles_background__2Fc5s\",\"graphs\":\"styles_graphs__ANjRV\",\"body\":\"styles_body__32Flv\"};","import axios from \"axios\";\r\nimport {BASE_URL} from \"../config/network\";\r\n\r\nconst API = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: false\r\n})\r\n\r\nexport const getBatteryGraph = () => {\r\n    return API.get('battery.json')\r\n}\r\n\r\nexport const getTriggerGraph = () => {\r\n    return API.get('trigger.json')\r\n}\r\n","export const BASE_URL = `https://air-freshener-iot-default-rtdb.europe-west1.firebasedatabase.app/test2/`\r\n","import React, {useEffect, useState} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faBatteryEmpty, faBatteryFull,\r\n    faBatteryHalf,\r\n    faBatteryQuarter,\r\n    faBatteryThreeQuarters\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {getBatteryGraph} from \"../../../api/api\";\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\n\r\nconst Battery = () => {\r\n    const [state, setState] = useState({percentage: 100, lastFetch: moment()})\r\n    const getIcon = (percentage) => {\r\n        if (percentage < 10) return [faBatteryEmpty, '#eb3f33']\r\n        if (percentage < 25) return [faBatteryQuarter, '#ffce5c']\r\n        if (percentage < 50) return [faBatteryHalf, '#5fd393']\r\n        if (percentage < 75) return [faBatteryThreeQuarters, '#5fd393']\r\n        if (percentage <= 100) return [faBatteryFull, '#5fd393']\r\n    }\r\n\r\n    const getDiff = () => {\r\n        const now = moment()\r\n        let unit = 'seconds'\r\n\r\n        const calcDiff = (unit='s') => now.diff(moment(state.lastFetch), unit)\r\n\r\n        let diff = calcDiff('s')\r\n\r\n        if (diff >= 60) {\r\n            diff = calcDiff('m')\r\n            unit = 'minutes'\r\n            if (diff >= 60) {\r\n                diff = calcDiff('h')\r\n                unit = 'hours'\r\n                if (diff >= 24) {\r\n                    unit = 'days'\r\n                    diff = calcDiff('d')\r\n                }\r\n            }\r\n        }\r\n\r\n        return [diff, unit]\r\n    }\r\n    const fetchBattery = async () => {\r\n        const {data} = await getBatteryGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\r\n        const lastRecord = dataArray.slice(-1)[0]\r\n        debugger\r\n        setState({percentage: lastRecord?.value || 0, lastFetch: lastRecord?.time || moment()})\r\n    }\r\n\r\n    const shuffle = () => {\r\n        const value = Math.round(Math.random() * 100)\r\n        setState(prev => ({...prev, percentage: value}))\r\n    }\r\n\r\n\r\n    const icon = getIcon(state.percentage)\r\n    useEffect(()=>{fetchBattery()},[])\r\n    return <div className={styles.battery} onDoubleClick={shuffle}>\r\n        <FontAwesomeIcon icon={icon[0]} color={icon[1]}/>\r\n        <div>\r\n            {state.percentage+'%'}\r\n        </div>\r\n        <div style={{color: '#888'}}>\r\n            {getDiff().join(' ')+' ago'}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Battery\r\n","import React from 'react'\r\nimport styles from './style.module.css'\r\nimport Battery from \"../Battery\";\r\n\r\nconst Header = () => {\r\n    return <div className={styles.bar}>\r\n        <div className={styles.barTitle}>\r\n            AirPshicker\r\n        </div>\r\n        <Battery/>\r\n    </div>\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\n\r\nconst BatteryGraph = ({data=[]}) => {\r\n\r\n    const options = {\r\n            colors: ['#00ff00'],\r\n            chart: {\r\n                type: 'area',\r\n                stacked: false,\r\n                height: 350,\r\n                zoom: {\r\n                    type: 'x',\r\n                    enabled: true,\r\n                    autoScaleYaxis: true\r\n                },\r\n                toolbar: {\r\n                    autoSelected: 'zoom',\r\n                    tools: {\r\n                        download: false,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: false,\r\n                        zoomout: false,\r\n                        pan: true,\r\n                        reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n                        customIcons: []\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            markers: {\r\n                size: 0,\r\n            },\r\n            title: {\r\n                text: 'Battery Percentage',\r\n                align: 'left'\r\n            },\r\n            fill: {\r\n                colors: ['#00ff00'],\r\n            },\r\n            yaxis: {\r\n                max: 100,\r\n                type: 'numeric',\r\n                min: 0,\r\n                title: {\r\n                    text: 'Battery'\r\n                },\r\n                labels: {\r\n                    formatter: (val) => val+'%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'numeric',\r\n                categories: data.map(({time})=>time),\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return moment(val).format('DD/MM HH:mm');\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                shared: false,\r\n            }\r\n        }\r\n\r\n    const series = [{\r\n        name: 'Battery',\r\n        data: data.map(({value, time}, index)=>value)\r\n    }]\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ReactApexChart options={options} series={series} type=\"area\" height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default BatteryGraph\r\n","export default __webpack_public_path__ + \"static/media/bkg.5f5f183a.jpg\";","import React from 'react'\r\nimport styles from './styles.module.css'\r\nimport ApexChart from 'react-apexcharts'\r\n\r\nconst TriggerGraph = ({data = []}) => {\r\n\r\n    const series = [{data: data.map(({value}) => value), name: 'Usage'}]\r\n\r\n    const options = {\r\n        chart: {\r\n            width: 380,\r\n            type: 'radar',\r\n\r\n        },\r\n        title: {\r\n            text: 'Daily usage',\r\n            align: 'left'\r\n        },\r\n        plotOptions: {\r\n            radar: {\r\n                polygons: {\r\n                    strokeColor: 'transparent',\r\n                    fill: {colors: ['#fff']}\r\n                },\r\n\r\n            }\r\n        },\r\n        labels: data.map(({hour}) => hour),\r\n        fill: {\r\n            opacity: .4\r\n        },\r\n        stroke: {\r\n            show: false,\r\n            width: 2,\r\n            colors: [],\r\n            dashArray: 0\r\n        },\r\n        markers: {\r\n            size: 0\r\n        },\r\n        yaxis: {\r\n            show: false\r\n        },\r\n        xaxis: {\r\n            show: true,\r\n            categories: data.map(({hour}) => hour+':00'),\r\n            labels: {\r\n                show: true,\r\n                style: {\r\n                    colors: [\"#161616\"],\r\n                    fontSize: \"11px\",\r\n                    fontFamily: 'Arial',\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            show: false\r\n        },\r\n\r\n    }\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ApexChart type={'radar'} options={options} series={series} height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default TriggerGraph\r\n","import moment from \"moment\";\r\n\r\nexport const spreadTriggersToDay = (pairs=[]) => {\r\n    let data = new Array(24).fill(0).map((_,index)=>({hour: index, value: 0}))\r\n    pairs.forEach(({time, value})=>{\r\n        const hour = getHour(time)\r\n        data[hour] = {...data[hour], value: data[hour].value+1}\r\n    })\r\n    return data\r\n}\r\n\r\nconst getHour = (timestamp) => {\r\n    return +moment(timestamp).format('H')\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './styles.module.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCog} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {getBatteryGraph, getTriggerGraph} from \"../../../api/api\";\r\nimport {spreadTriggersToDay} from \"../../../utils\";\r\nimport BatteryGraph from \"../../Graph\";\r\nimport TriggerGraph from \"../../Graph/TriggerGraph\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst Main = () => {\r\n    const [batteryData, setBatteryData] = useState([])\r\n    const [triggerData, setTriggerData] = useState([])\r\n\r\n    const fetchTriggerData = async () => {\r\n        const {data} = await getTriggerGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp}))\r\n        const daySpread = spreadTriggersToDay(dataArray)\r\n        setTriggerData(daySpread)\r\n    }\r\n\r\n    const fetchBatteryData = async () => {\r\n        const {data} = await getBatteryGraph()\r\n        const dataArray = Object\r\n            .entries(data)\r\n            .filter(([key])=>key!=='last_id')\r\n            .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\r\n        setBatteryData(dataArray)\r\n    }\r\n    useEffect(()=>{\r\n        fetchBatteryData()\r\n        fetchTriggerData()\r\n    }, [])\r\n\r\n\r\n    return <div className={styles.mainGrid}>\r\n        <Card mainComponent={'7.3V'} bottomText={'Enough to work (Mock)'} gridArea={'volt'}/>\r\n        <Card gridArea={'today'} mainComponent={'1234'} bottomText={'Activations today. Eww, stinky (Mock)'}/>\r\n        <Card gridArea={'sets'} mainComponent={<FontAwesomeIcon icon={faCog}/>} bottomText={'Settings'} onCLick={()=>{}}/>\r\n        <GraphCard gridArea={'graph1'}>\r\n            <BatteryGraph data={batteryData}/>\r\n        </GraphCard>\r\n        <GraphCard gridArea={'graph2'}>\r\n            <TriggerGraph data={triggerData}/>\r\n        </GraphCard>\r\n    </div>\r\n}\r\n\r\nconst Card = ({gridArea='', mainComponent='', bottomText='', onCLick}) => {\r\n\r\n    return <div className={classNames(styles.card, onCLick && styles.clickable)} onClick={()=>{onCLick && onCLick()}} style={{gridArea}}>\r\n        <div className={styles.cardMainContent}>{mainComponent}</div>\r\n        <div className={styles.cardBottomText}>{bottomText}</div>\r\n    </div>\r\n}\r\n\r\nconst GraphCard = ({gridArea='', ...props}) => {\r\n    return <div className={styles.card} style={{gridArea}}>\r\n        {props.children}\r\n    </div>\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\r\nimport Header from \"./components/common/Header\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {getBatteryGraph, getTriggerGraph} from \"./api/api\";\r\nimport BatteryGraph from \"./components/Graph\";\r\nimport background from './assets/bkg.jpg'\r\nimport styles from './styles.module.css'\r\nimport TriggerGraph from \"./components/Graph/TriggerGraph\";\r\nimport {spreadTriggersToDay} from \"./utils\";\r\nimport Main from \"./components/screens/Main\";\r\n\r\nfunction App() {\r\n  const [batteryData, setBatteryData] = useState([])\r\n  const [triggerData, setTriggerData] = useState([])\r\n\r\n  const fetchTriggerData = async () => {\r\n    const {data} = await getTriggerGraph()\r\n    const dataArray = Object\r\n        .entries(data)\r\n        .filter(([key])=>key!=='last_id')\r\n        .map(([key, value])=>({...value, time: value?.timestamp}))\r\n    const daySpread = spreadTriggersToDay(dataArray)\r\n    setTriggerData(daySpread)\r\n  }\r\n\r\n  const fetchBatteryData = async () => {\r\n    const {data} = await getBatteryGraph()\r\n    const dataArray = Object\r\n        .entries(data)\r\n        .filter(([key])=>key!=='last_id')\r\n        .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\r\n    setBatteryData(dataArray)\r\n  }\r\n  useEffect(()=>{\r\n    fetchBatteryData()\r\n    fetchTriggerData()\r\n  }, [])\r\n\r\n  return <div className={styles.body}>\r\n    <Header/>\r\n    <Main/>\r\n    {/*<div className={styles.graphs}><BatteryGraph data={batteryData}/>\r\n      <TriggerGraph data={triggerData}/></div>*/}\r\n  </div>\r\n}\r\n\r\n//    <img src={background} className={styles.background}/>\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}