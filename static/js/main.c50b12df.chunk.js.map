{"version":3,"sources":["components/common/Header/style.module.css","styles.module.css","components/common/Header/index.js","api/api.js","config/network.js","components/Graph/index.js","assets/bkg.jpg","components/Graph/TriggerGraph.js","utils/index.js","App.js","reportWebVitals.js","index.js","components/Graph/styles.module.css"],"names":["module","exports","Header","className","styles","bar","barTitle","API","axios","create","baseURL","withCredentials","BatteryGraph","data","options","colors","chart","type","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","autoSelected","tools","download","selection","zoomin","zoomout","pan","reset","customIcons","dataLabels","markers","size","title","text","align","fill","yaxis","max","min","labels","formatter","val","xaxis","categories","map","time","moment","format","tooltip","shared","series","name","index","value","graphContainer","style","width","TriggerGraph","plotOptions","radar","polygons","strokeColor","hour","opacity","stroke","show","dashArray","fontSize","fontFamily","legend","spreadTriggersToDay","pairs","Array","_","forEach","getHour","timestamp","App","useState","batteryData","setBatteryData","triggerData","setTriggerData","fetchTriggerData","a","get","dataArray","Object","entries","filter","daySpread","fetchBatteryData","useEffect","userSelect","src","background","graphs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c50b12df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"style_bar__3UGFG\",\"barTitle\":\"style_barTitle__2GbdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"styles_background__2Fc5s\",\"graphs\":\"styles_graphs__ANjRV\"};","import React from 'react'\r\nimport styles from './style.module.css'\r\n\r\nconst Header = () => {\r\n    return <div className={styles.bar}>\r\n        <div className={styles.barTitle}>\r\n            <b>Air</b>App\r\n        </div>\r\n    </div>\r\n}\r\nexport default Header\r\n","import axios from \"axios\";\r\nimport {BASE_URL} from \"../config/network\";\r\n\r\nconst API = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: false\r\n})\r\n\r\nexport const getBatteryGraph = () => {\r\n    return API.get('battery.json')\r\n}\r\n\r\nexport const getTriggerGraph = () => {\r\n    return API.get('trigger.json')\r\n}\r\n","export const BASE_URL = `https://air-freshener-iot-default-rtdb.europe-west1.firebasedatabase.app/test2/`\r\n","import React from 'react'\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport moment from \"moment\";\r\nimport styles from './styles.module.css'\r\n\r\nconst BatteryGraph = ({data=[]}) => {\r\n\r\n    const options = {\r\n            colors: ['#00ff00'],\r\n            chart: {\r\n                type: 'area',\r\n                stacked: false,\r\n                height: 350,\r\n                zoom: {\r\n                    type: 'x',\r\n                    enabled: true,\r\n                    autoScaleYaxis: true\r\n                },\r\n                toolbar: {\r\n                    autoSelected: 'zoom',\r\n                    tools: {\r\n                        download: false,\r\n                        selection: true,\r\n                        zoom: true,\r\n                        zoomin: false,\r\n                        zoomout: false,\r\n                        pan: true,\r\n                        reset: true | '<img src=\"/static/icons/reset.png\" width=\"20\">',\r\n                        customIcons: []\r\n                    }\r\n                }\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            markers: {\r\n                size: 0,\r\n            },\r\n            title: {\r\n                text: 'Battery Percentage',\r\n                align: 'left'\r\n            },\r\n            fill: {\r\n                colors: ['#00ff00'],\r\n            },\r\n            yaxis: {\r\n                max: 100,\r\n                type: 'numeric',\r\n                min: 0,\r\n                title: {\r\n                    text: 'Battery'\r\n                },\r\n                labels: {\r\n                    formatter: (val) => val+'%'\r\n                }\r\n            },\r\n            xaxis: {\r\n                type: 'numeric',\r\n                categories: data.map(({time})=>time),\r\n                labels: {\r\n                    formatter: function (val) {\r\n                        return moment(val).format('DD/MM HH:mm');\r\n                    },\r\n                },\r\n            },\r\n            tooltip: {\r\n                shared: false,\r\n            }\r\n        }\r\n\r\n    const series = [{\r\n        name: 'Battery',\r\n        data: data.map(({value, time}, index)=>value)\r\n    }]\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ReactApexChart options={options} series={series} type=\"area\" height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\n\r\nexport default BatteryGraph\r\n","export default __webpack_public_path__ + \"static/media/bkg.5f5f183a.jpg\";","import React from 'react'\r\nimport styles from './styles.module.css'\r\nimport ApexChart from 'react-apexcharts'\r\n\r\nconst TriggerGraph = ({data = []}) => {\r\n\r\n    const series = [{data: data.map(({value}) => value), name: 'Usage'}]\r\n\r\n    const options = {\r\n        chart: {\r\n            width: 380,\r\n            type: 'radar',\r\n\r\n        },\r\n        title: {\r\n            text: 'Daily usage',\r\n            align: 'left'\r\n        },\r\n        plotOptions: {\r\n            radar: {\r\n                polygons: {\r\n                    strokeColor: 'transparent',\r\n                    fill: {colors: ['#fff']}\r\n                },\r\n\r\n            }\r\n        },\r\n        labels: data.map(({hour}) => hour),\r\n        fill: {\r\n            opacity: .4\r\n        },\r\n        stroke: {\r\n            show: false,\r\n            width: 2,\r\n            colors: [],\r\n            dashArray: 0\r\n        },\r\n        markers: {\r\n            size: 0\r\n        },\r\n        yaxis: {\r\n            show: false\r\n        },\r\n        xaxis: {\r\n            show: true,\r\n            categories: data.map(({hour}) => hour+':00'),\r\n            labels: {\r\n                show: true,\r\n                style: {\r\n                    colors: [\"#161616\"],\r\n                    fontSize: \"11px\",\r\n                    fontFamily: 'Arial',\r\n                }\r\n            }\r\n        },\r\n        legend: {\r\n            show: false\r\n        },\r\n\r\n    }\r\n\r\n    return <div className={styles.graphContainer}>\r\n        <ApexChart type={'radar'} options={options} series={series} height={350} style={{width: '100%'}}/>\r\n    </div>\r\n}\r\n\r\nexport default TriggerGraph\r\n","import moment from \"moment\";\r\n\r\nexport const spreadTriggersToDay = (pairs=[]) => {\r\n    let data = new Array(24).fill(0).map((_,index)=>({hour: index, value: 0}))\r\n    pairs.forEach(({time, value})=>{\r\n        const hour = getHour(time)\r\n        data[hour] = {...data[hour], value: data[hour].value+1}\r\n    })\r\n    return data\r\n}\r\n\r\nconst getHour = (timestamp) => {\r\n    return +moment(timestamp).format('H')\r\n}\r\n","import './App.css';\nimport Header from \"./components/common/Header\";\nimport React, {useEffect, useState} from \"react\";\nimport {getBatteryGraph, getTriggerGraph} from \"./api/api\";\nimport BatteryGraph from \"./components/Graph\";\nimport background from './assets/bkg.jpg'\nimport styles from './styles.module.css'\nimport TriggerGraph from \"./components/Graph/TriggerGraph\";\nimport {spreadTriggersToDay} from \"./utils\";\n\nfunction App() {\n  const [batteryData, setBatteryData] = useState([])\n  const [triggerData, setTriggerData] = useState([])\n\n  const fetchTriggerData = async () => {\n    const {data} = await getTriggerGraph()\n    const dataArray = Object\n        .entries(data)\n        .filter(([key])=>key!=='last_id')\n        .map(([key, value])=>({...value, time: value?.timestamp}))\n    const daySpread = spreadTriggersToDay(dataArray)\n    setTriggerData(daySpread)\n  }\n\n  const fetchBatteryData = async () => {\n    const {data} = await getBatteryGraph()\n    const dataArray = Object\n        .entries(data)\n        .filter(([key])=>key!=='last_id')\n        .map(([key, value])=>({...value, time: value?.timestamp/* moment(value?.timestamp).format('DD/MM HH:MM:SS')*/}))\n    setBatteryData(dataArray)\n  }\n  useEffect(()=>{\n    fetchBatteryData()\n    fetchTriggerData()\n  }, [])\n\n  return <div style={{userSelect: 'none'}}>\n    <img src={background} className={styles.background}/>\n    <Header/>\n    <div className={styles.graphs}><BatteryGraph data={batteryData}/>\n      <TriggerGraph data={triggerData}/></div>\n  </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphContainer\":\"styles_graphContainer__rvnP9\"};"],"sourceRoot":""}