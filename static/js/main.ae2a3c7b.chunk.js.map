{"version":3,"sources":["components/common/Header/style.module.css","components/common/Header/index.js","api/api.js","config/network.js","components/Graph/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","styles","bar","barTitle","API","axios","create","baseURL","withCredentials","Graph","data","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Legend","Line","type","stroke","App","useState","setData","getData","a","get","dataArray","Object","entries","filter","map","value","time","moment","timestamp","format","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,IAAM,mBAAmB,SAAW,0B,gNCSvCC,EAPA,WACX,OAAO,qBAAKC,UAAWC,IAAOC,IAAvB,SACH,sBAAKF,UAAWC,IAAOE,SAAvB,UACI,oCADJ,Y,SCFFC,E,OAAMC,EAAMC,OAAO,CACrBC,QCJiB,iFDKjBC,iBAAiB,I,uEEkBNC,EApBD,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACZ,OAAO,cAACC,EAAA,EAAD,CAAqBC,MAAO,OAAQC,OAAQ,IAA5C,SAAiD,eAACC,EAAA,EAAD,CACpDJ,KAAMA,EACNE,MAAO,IACPC,OAAQ,IACRE,OAAQ,CACJC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARwC,UAWpD,cAACC,EAAA,EAAD,CAAOC,QAAS,SAChB,cAACC,EAAA,EAAD,CAAOD,QAAS,UAChB,cAACE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMH,QAAS,QAASI,KAAM,WAAYC,OAAQ,kBCS3CC,MApBf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNlB,EADM,KACAmB,EADA,KAEPC,EAAO,uCAAG,gCAAAC,EAAA,sEHAP3B,EAAI4B,IAAI,cGAD,gBACTtB,EADS,EACTA,KACCuB,EAAYC,OACbC,QAAQzB,GACR0B,QAAO,kBAAe,YAAf,uBACPC,KAAI,mCAAOC,GAAP,8BAAC,eAAoBA,GAArB,IAA4BC,KAAMC,IAAM,OAACF,QAAD,IAACA,OAAD,EAACA,EAAOG,WAAWC,OAAO,uBAC3Eb,EAAQI,GANM,2CAAH,qDAYb,OAJAU,qBAAU,WACRb,MACC,IAEI,gCACL,cAAC,EAAD,IACA,cAAC,EAAD,CAAOpB,KAAMA,QCXFkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae2a3c7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"style_bar__3UGFG\",\"barTitle\":\"style_barTitle__2GbdM\"};","import React from 'react'\r\nimport styles from './style.module.css'\r\n\r\nconst Header = () => {\r\n    return <div className={styles.bar}>\r\n        <div className={styles.barTitle}>\r\n            <b>Air</b>App\r\n        </div>\r\n    </div>\r\n}\r\nexport default Header\r\n","import axios from \"axios\";\r\nimport {BASE_URL} from \"../config/network\";\r\n\r\nconst API = axios.create({\r\n    baseURL: BASE_URL,\r\n    withCredentials: false\r\n})\r\n\r\nexport const getGraph = () => {\r\n    return API.get('graph.json')\r\n}\r\n","export const BASE_URL = `https://air-freshener-iot-default-rtdb.europe-west1.firebasedatabase.app/test/`\r\n","import React from \"react\";\r\nimport {Legend, Line, LineChart, ResponsiveContainer, XAxis, YAxis} from 'recharts'\r\n\r\nconst Graph = ({data}) => {\r\n    return <ResponsiveContainer width={'100%'} height={500}><LineChart\r\n        data={data}\r\n        width={500}\r\n        height={500}\r\n        margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5,\r\n        }}\r\n    >\r\n        <XAxis dataKey={'time'}/>\r\n        <YAxis dataKey={'value'}/>\r\n        <Legend/>\r\n        <Line dataKey={'value'} type={'monotone'} stroke={\"#8884d8\"}/>\r\n    </LineChart>\r\n    </ResponsiveContainer>\r\n}\r\n\r\nexport default Graph\r\n","import './App.css';\nimport Header from \"./components/common/Header\";\nimport {useEffect, useState} from \"react\";\nimport {getGraph} from \"./api/api\";\nimport moment from \"moment\";\nimport Graph from \"./components/Graph\";\n\nfunction App() {\n  const [data, setData] = useState([])\n  const getData = async () => {\n  const {data} = await getGraph()\n    const dataArray = Object\n        .entries(data)\n        .filter(([key])=>key!=='last_id')\n        .map(([key, value])=>({...value, time: moment(value?.timestamp).format('DD/MM HH:MM:SS')}))\n    setData(dataArray)\n  }\n  useEffect(()=>{\n    getData()\n  }, [])\n\n  return <div>\n    <Header/>\n    <Graph data={data}/>\n  </div>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}